// Shader "Custom/InvertedNormals" {
//     Properties
//     {
//         [NoScaleOffset] _MainTex ("Texture", 2D) = "white" {}
//     }
//     SubShader {
       
//             Tags { "RenderType" = "Opaque" }

//             Cull Off

//             CGPROGRAM
//             #pragma vertex vert
//             #pragma fragment frag
//             #include "UnityCG.cginc"

//             void vert(inout appdata_full v)
//             {
//                 v.normal.xyz = v.normal * -1;
//             }

//             struct v2f {
//                     float3 worldPos : TEXCOORD0;
//                     half3 tspace0 : TEXCOORD1;
//                     half3 tspace1 : TEXCOORD2;
//                     half3 tspace2 : TEXCOORD3;
//                     float2 uv : TEXCOORD4;
//                     float4 pos : SV_POSITION;
//             };

//             sampler2D _MainTex;
//             fixed4 frag(v2f i) : SV_Target
//             {
//                     fixed4 c = 0;
//                     // modulate sky color with the base texture, and the occlusion map
//                     fixed3 baseColor = tex2D(_MainTex, i.uv).rgb;
//                     c.rgb *= baseColor;

//                     return c;
//             }

//             ENDCG
    

//         Subshader {
//             Tags { "RenderType" = "Opaque" }

//             Cull Off

//             CGPROGRAM

//             #pragma surface surf Lambert vertex:vert

//             void vert(inout appdata_full v)
//             {
//                 v.normal.xyz = v.normal * -1;
//             }

//             struct Input {
//                 float4 color : COLOR;
//             };

//             void surf (Input IN, inout SurfaceOutput o) {
//                 o.Albedo = 1;
//             }


//             ENDCG
//         }
//     }
     
//     Fallback "Diffuse"
     
// }